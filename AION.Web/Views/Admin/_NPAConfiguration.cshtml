@using System.Web.Mvc.Html
@using AION.BL
@using AION.Web.Extensions

@model AION.Web.Models.AdminViewModel

@{
    Layout = null;
    string ModuleName = "Admin";
    bool isreadonly = Model.IsReadOnly;
    bool isenabled = !Model.IsReadOnly;
    string disabledcls = Model.DisabledCls;
    string disablebtn = Model.DisabledHtml;
    string readonlytxt = Model.ReadonlyHtml;

}

@functions
{
    void RefreshData(string paramater)
    {

    }

}

<h4 class="form-section"><i class="fa fa-plus"></i> Add Non Project Appointment Type</h4>

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label>Add New:</label>
            @Html.TextBoxFor(m => m.NPAConfigViewModel.Addnewtext, new
                           {
                          @id = "txtAddNew",
                          @class = "form-control border-cyan",
                           @placeholder = "Enter NPA Type Name",
                           @maxlength = "30"
                           }, isenabled)
            <div class="badge badge-info">Max 30 characters</div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label>Time Allocation Type:</label>
            @Html.DropDownListFor(m => m.NPAConfigViewModel.SelectedTimeAllocationType, Model.NPAConfigViewModel.TimeAllocationTypeList,
                                new { @id = "timeAllocationType", @class = "form-select form-control border-cyan" }, isenabled)
        </div>
    </div>
</div>
<div class="form-actions">
    <button type="button" class="btn btn-poppy" id="add-npa">Add</button>
</div>

<h4 class="form-section"><i class="fa fa-calendar"></i> Non Project Appointment Types</h4>

    @Html.Partial("_MultiSelectWithModel",
    new AION.Web.Models.MultiSelectViewModel()
    {
        FromList = Model.NPAConfigViewModel.InactiveNPAList,
        ToList = Model.NPAConfigViewModel.ActiveNPAList,
        PageName = "NPA",
        TitleFromList = "Inactive",
        TitleToList = "Active",
        NameFromList = "NPAConfigViewModel.SelectedInactiveNPAList",
        NameToList = "NPAConfigViewModel.SelectedActiveNPAList",
        DisplayMoveUpDown = false
    })
