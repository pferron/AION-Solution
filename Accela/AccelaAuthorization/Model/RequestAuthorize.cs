/* 
 * Authentication
 *
 * Construct's OAuth2 APIs for generating API access tokens. For an overview, see [Construct API Authentication](../construct-apiAuth.html).
 *
 * OpenAPI spec version: v4-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AccelaAuthorization.Client.SwaggerDateConverter;

namespace AccelaAuthorization.Model
{
    /// <summary>
    /// RequestAuthorize
    /// </summary>
    [DataContract]
        public partial class RequestAuthorize :  IEquatable<RequestAuthorize>, IValidatableObject
    {
        /// <summary>
        /// Specifies whether the request is for an authorization code or access token.   Valid values:  *code* - Request for an authorization code. See [Authorization Code Flow](../construct-authCodeFlow.html).  *token* - Request for an access token. See [Implicit Flow](../construct-implicitFlow.html).
        /// </summary>
        /// <value>Specifies whether the request is for an authorization code or access token.   Valid values:  *code* - Request for an authorization code. See [Authorization Code Flow](../construct-authCodeFlow.html).  *token* - Request for an access token. See [Implicit Flow](../construct-implicitFlow.html).</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum ResponseTypeEnum
        {
            /// <summary>
            /// Enum Code for value: code
            /// </summary>
            [EnumMember(Value = "code")]
            Code = 0,
            /// <summary>
            /// Enum Token for value: token
            /// </summary>
            [EnumMember(Value = "token")]
            Token = 1        }
        /// <summary>
        /// Specifies whether the request is for an authorization code or access token.   Valid values:  *code* - Request for an authorization code. See [Authorization Code Flow](../construct-authCodeFlow.html).  *token* - Request for an access token. See [Implicit Flow](../construct-implicitFlow.html).
        /// </summary>
        /// <value>Specifies whether the request is for an authorization code or access token.   Valid values:  *code* - Request for an authorization code. See [Authorization Code Flow](../construct-authCodeFlow.html).  *token* - Request for an access token. See [Implicit Flow](../construct-implicitFlow.html).</value>
        [DataMember(Name="response_type", EmitDefaultValue=false)]
        public ResponseTypeEnum ResponseType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RequestAuthorize" /> class.
        /// </summary>
        /// <param name="responseType">Specifies whether the request is for an authorization code or access token.   Valid values:  *code* - Request for an authorization code. See [Authorization Code Flow](../construct-authCodeFlow.html).  *token* - Request for an access token. See [Implicit Flow](../construct-implicitFlow.html). (required).</param>
        /// <param name="clientId">The app ID value from [Construct Developer Portal](https://developer.accela.com). (required).</param>
        /// <param name="redirectUri">The URI that is used to redirect to the client with an authorization code. This must be a valid URL.  **Note**: redirect_uri is required only when calling this API with response_type&#x3D;code for [Authorization Code Flow](../construct-authCodeFlow.html).   **Note**: Special characters in the URL should be encoded. (required).</param>
        /// <param name="environment">The Construct environment name, such as \&quot;PROD\&quot; and \&quot;TEST\&quot;. The [Get All Agency Environments](./api-agencies.html#operation/v4.get.agencies.name.environments) API returns a list of configured environments available for a specific agency. The [Get Environment Status](./api-agencies.html#operation/v4.get.agencies.name.environments.env.status) checks connectivity with the Agency/Environment. (required).</param>
        /// <param name="agencyName">The agency name defined in [Construct Administrator Portal](https://admin.accela.com). APIs such as [Get All Agencies](./api-agencies.html#operation/v4.get.agencies), [Get Agency](./api-agencies.html#operation/v4.get.agencies.name), and [Search Agencies](./api-search.html#operation/v4.post.search.agencies) return valid agency names.   **Note**: For an **agency app**, agency is required. For a **citizen app** that use dynamic agency routing functionality, agency_name is optional. (required).</param>
        /// <param name="forcelogin">Indicates whether or not Accela Auth server forces end-user login each time client requests access token.        Valid values:  *true*: Always force end-user login.  *false*: Do not force end-user login. The sever determines if the current request needs login. This is the default behavior..</param>
        /// <param name="scope">The scope of the resources that the client requests. Enter a list of APIs scope names separated by spaces. Get the scope names from the [Construct API Reference](./api-index.html)..</param>
        /// <param name="state">An opaque value that the client uses for maintaining the state between the request and callback. Enter a unique value. This can be used for [Cross-Site Request Forgery](http://en.wikipedia.org/wiki/Cross-site_request_forgery) (CSRF) protection..</param>
        public RequestAuthorize(ResponseTypeEnum responseType = default(ResponseTypeEnum), string clientId = default(string), string redirectUri = default(string), string environment = default(string), string agencyName = default(string), bool? forcelogin = default(bool?), string scope = default(string), string state = default(string))
        {
            // to ensure "responseType" is required (not null)
            if (responseType == null)
            {
                throw new InvalidDataException("responseType is a required property for RequestAuthorize and cannot be null");
            }
            else
            {
                this.ResponseType = responseType;
            }
            // to ensure "clientId" is required (not null)
            if (clientId == null)
            {
                throw new InvalidDataException("clientId is a required property for RequestAuthorize and cannot be null");
            }
            else
            {
                this.ClientId = clientId;
            }
            // to ensure "redirectUri" is required (not null)
            if (redirectUri == null)
            {
                throw new InvalidDataException("redirectUri is a required property for RequestAuthorize and cannot be null");
            }
            else
            {
                this.RedirectUri = redirectUri;
            }
            // to ensure "environment" is required (not null)
            if (environment == null)
            {
                throw new InvalidDataException("environment is a required property for RequestAuthorize and cannot be null");
            }
            else
            {
                this.Environment = environment;
            }
            // to ensure "agencyName" is required (not null)
            if (agencyName == null)
            {
                throw new InvalidDataException("agencyName is a required property for RequestAuthorize and cannot be null");
            }
            else
            {
                this.AgencyName = agencyName;
            }
            this.Forcelogin = forcelogin;
            this.Scope = scope;
            this.State = state;
        }
        

        /// <summary>
        /// The app ID value from [Construct Developer Portal](https://developer.accela.com).
        /// </summary>
        /// <value>The app ID value from [Construct Developer Portal](https://developer.accela.com).</value>
        [DataMember(Name="client_id", EmitDefaultValue=false)]
        public string ClientId { get; set; }

        /// <summary>
        /// The URI that is used to redirect to the client with an authorization code. This must be a valid URL.  **Note**: redirect_uri is required only when calling this API with response_type&#x3D;code for [Authorization Code Flow](../construct-authCodeFlow.html).   **Note**: Special characters in the URL should be encoded.
        /// </summary>
        /// <value>The URI that is used to redirect to the client with an authorization code. This must be a valid URL.  **Note**: redirect_uri is required only when calling this API with response_type&#x3D;code for [Authorization Code Flow](../construct-authCodeFlow.html).   **Note**: Special characters in the URL should be encoded.</value>
        [DataMember(Name="redirect_uri", EmitDefaultValue=false)]
        public string RedirectUri { get; set; }

        /// <summary>
        /// The Construct environment name, such as \&quot;PROD\&quot; and \&quot;TEST\&quot;. The [Get All Agency Environments](./api-agencies.html#operation/v4.get.agencies.name.environments) API returns a list of configured environments available for a specific agency. The [Get Environment Status](./api-agencies.html#operation/v4.get.agencies.name.environments.env.status) checks connectivity with the Agency/Environment.
        /// </summary>
        /// <value>The Construct environment name, such as \&quot;PROD\&quot; and \&quot;TEST\&quot;. The [Get All Agency Environments](./api-agencies.html#operation/v4.get.agencies.name.environments) API returns a list of configured environments available for a specific agency. The [Get Environment Status](./api-agencies.html#operation/v4.get.agencies.name.environments.env.status) checks connectivity with the Agency/Environment.</value>
        [DataMember(Name="environment", EmitDefaultValue=false)]
        public string Environment { get; set; }

        /// <summary>
        /// The agency name defined in [Construct Administrator Portal](https://admin.accela.com). APIs such as [Get All Agencies](./api-agencies.html#operation/v4.get.agencies), [Get Agency](./api-agencies.html#operation/v4.get.agencies.name), and [Search Agencies](./api-search.html#operation/v4.post.search.agencies) return valid agency names.   **Note**: For an **agency app**, agency is required. For a **citizen app** that use dynamic agency routing functionality, agency_name is optional.
        /// </summary>
        /// <value>The agency name defined in [Construct Administrator Portal](https://admin.accela.com). APIs such as [Get All Agencies](./api-agencies.html#operation/v4.get.agencies), [Get Agency](./api-agencies.html#operation/v4.get.agencies.name), and [Search Agencies](./api-search.html#operation/v4.post.search.agencies) return valid agency names.   **Note**: For an **agency app**, agency is required. For a **citizen app** that use dynamic agency routing functionality, agency_name is optional.</value>
        [DataMember(Name="agency_name", EmitDefaultValue=false)]
        public string AgencyName { get; set; }

        /// <summary>
        /// Indicates whether or not Accela Auth server forces end-user login each time client requests access token.        Valid values:  *true*: Always force end-user login.  *false*: Do not force end-user login. The sever determines if the current request needs login. This is the default behavior.
        /// </summary>
        /// <value>Indicates whether or not Accela Auth server forces end-user login each time client requests access token.        Valid values:  *true*: Always force end-user login.  *false*: Do not force end-user login. The sever determines if the current request needs login. This is the default behavior.</value>
        [DataMember(Name="forcelogin", EmitDefaultValue=false)]
        public bool? Forcelogin { get; set; }

        /// <summary>
        /// The scope of the resources that the client requests. Enter a list of APIs scope names separated by spaces. Get the scope names from the [Construct API Reference](./api-index.html).
        /// </summary>
        /// <value>The scope of the resources that the client requests. Enter a list of APIs scope names separated by spaces. Get the scope names from the [Construct API Reference](./api-index.html).</value>
        [DataMember(Name="scope", EmitDefaultValue=false)]
        public string Scope { get; set; }

        /// <summary>
        /// An opaque value that the client uses for maintaining the state between the request and callback. Enter a unique value. This can be used for [Cross-Site Request Forgery](http://en.wikipedia.org/wiki/Cross-site_request_forgery) (CSRF) protection.
        /// </summary>
        /// <value>An opaque value that the client uses for maintaining the state between the request and callback. Enter a unique value. This can be used for [Cross-Site Request Forgery](http://en.wikipedia.org/wiki/Cross-site_request_forgery) (CSRF) protection.</value>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RequestAuthorize {\n");
            sb.Append("  ResponseType: ").Append(ResponseType).Append("\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  RedirectUri: ").Append(RedirectUri).Append("\n");
            sb.Append("  Environment: ").Append(Environment).Append("\n");
            sb.Append("  AgencyName: ").Append(AgencyName).Append("\n");
            sb.Append("  Forcelogin: ").Append(Forcelogin).Append("\n");
            sb.Append("  Scope: ").Append(Scope).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RequestAuthorize);
        }

        /// <summary>
        /// Returns true if RequestAuthorize instances are equal
        /// </summary>
        /// <param name="input">Instance of RequestAuthorize to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RequestAuthorize input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ResponseType == input.ResponseType ||
                    (this.ResponseType != null &&
                    this.ResponseType.Equals(input.ResponseType))
                ) && 
                (
                    this.ClientId == input.ClientId ||
                    (this.ClientId != null &&
                    this.ClientId.Equals(input.ClientId))
                ) && 
                (
                    this.RedirectUri == input.RedirectUri ||
                    (this.RedirectUri != null &&
                    this.RedirectUri.Equals(input.RedirectUri))
                ) && 
                (
                    this.Environment == input.Environment ||
                    (this.Environment != null &&
                    this.Environment.Equals(input.Environment))
                ) && 
                (
                    this.AgencyName == input.AgencyName ||
                    (this.AgencyName != null &&
                    this.AgencyName.Equals(input.AgencyName))
                ) && 
                (
                    this.Forcelogin == input.Forcelogin ||
                    (this.Forcelogin != null &&
                    this.Forcelogin.Equals(input.Forcelogin))
                ) && 
                (
                    this.Scope == input.Scope ||
                    (this.Scope != null &&
                    this.Scope.Equals(input.Scope))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ResponseType != null)
                    hashCode = hashCode * 59 + this.ResponseType.GetHashCode();
                if (this.ClientId != null)
                    hashCode = hashCode * 59 + this.ClientId.GetHashCode();
                if (this.RedirectUri != null)
                    hashCode = hashCode * 59 + this.RedirectUri.GetHashCode();
                if (this.Environment != null)
                    hashCode = hashCode * 59 + this.Environment.GetHashCode();
                if (this.AgencyName != null)
                    hashCode = hashCode * 59 + this.AgencyName.GetHashCode();
                if (this.Forcelogin != null)
                    hashCode = hashCode * 59 + this.Forcelogin.GetHashCode();
                if (this.Scope != null)
                    hashCode = hashCode * 59 + this.Scope.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
