/***********************************************************************************************************************          
* Object:       usp_get_internal_meeting_appointment_list_for_facilitators          
* Description:  Gets all the meetings.          
* Parameters:             
*               @identity                                            int          
*          
* Returns:      list of meetings         
* Comments:             
* Version:      1.0          
* Created by:   AION_user          
* Created:      7/24/2020          
************************************************************************************************************************          
* Change History: Date, Name, Description          
* 7/24/2020    jlindsay     initial          
* 12/15/2020    jlindsay    add express (EMA) meeting type         
* 03/18/2021    jlindsay    add APPT_CANCELLATION_REF_ID      
* 7/8/2021  jlindsay add missing fields    
* 7/13/2021  jallen  add team score TEAM_GRADE_TXT    
* 10/19/2021 jlindsay change meeting type enum for express meetings 
* 10/19/2021	jlindsay filter for past meetings - remove from list the day after the meeting date
***********************************************************************************************************************/
ALTER PROCEDURE [AION].[usp_get_internal_meeting_appointment_list_for_facilitators] @identity INT
AS
BEGIN
	DECLARE @closedapptstatus INT;
	DECLARE @cancelledapptstatus INT;
	DECLARE @CancelledProjectStatus INT;
	DECLARE @todaysDate DATETIME = getdate();

	SET @todaysDate = cast(@todaysDate AS DATE);

	--** get the appt status of closed and cancelled        
	--(@closedapptstatus,@cancelledapptstatus)        
	SELECT @closedapptstatus = APPT_RESPONSE_STATUS_REF_ID
	FROM [AION].[APPOINTMENT_RESPONSE_STATUS_REF]
	WHERE ENUM_MAPPING_VAL_NBR = 8;

	--cancelled sts        
	SELECT @cancelledapptstatus = APPT_RESPONSE_STATUS_REF_ID
	FROM [AION].[APPOINTMENT_RESPONSE_STATUS_REF]
	WHERE ENUM_MAPPING_VAL_NBR = 7;

	--** get the project status of cancelled        
	SELECT @CancelledProjectStatus = PROJECT_STATUS_REF_ID
	FROM [AION].[PROJECT_STATUS_REF]
	WHERE SRC_SYSTEM_VAL_TXT = 'Cancelled';

	--**        
	SELECT DISTINCT PS.[RECURRING_APPT_DT] AS [MEETING_DATE_TIME],
		7 AS [MEETING_TYPE], -- MEETINGTYPEENUM.PRELIMINARY            
		P.[PROJECT_TYP_REF_ID] AS [PROJECT_TYPE_ID], --DO NOT HAVE ENUM MAP AND ENUMS ARE MAPPED DIRECTLY TO PK.             
		P.[SRC_SYSTEM_VAL_TXT] AS [PROJECT_EXTREF_ID],
		P.[PROJECT_NM] AS [PROJECT_NM],
		ARSR.ENUM_MAPPING_VAL_NBR AS [APPOINTMENT_RESPONSE_STATUS],
		CASE 
			WHEN PSR.ENUM_MAPPING_VAL_NBR IN (
					12,
					13,
					14,
					15,
					16,
					17
					)
				THEN PSR.ENUM_MAPPING_VAL_NBR
			ELSE 14 -- IF ANY OTHER STATUS THEN CONSIDER IT AS NOT SCHEDULED. ANYTHING OTHER NEED TO BE ADDED TO ANOTHER CASE HERE AS 3RD STEP.            
			END AS [PROJECT_STATUS],
		PMA.[APPENDIX_AGENDA_DUE_DT] AS [AGENDA_DUE],
		PS.[RECURRING_APPT_DT] AS [MINUTES_DUE],
		P.[PROJECT_ID] AS [PROJECT_ID],
		0 AS [USER_ID],
		PMA.[WKR_ID_CREATED_TXT] AS [WKR_ID_CREATED_TXT],
		PMA.[CREATED_DTTM] AS [CREATED_DTTM],
		PMA.[WKR_ID_UPDATED_TXT] AS [WKR_ID_UPDATED_TXT],
		PMA.[UPDATED_DTTM] AS [UPDATED_DTTM],
		PMA.APPT_CANCELLATION_REF_ID,
		P.[RTAP_IND],
		P.[ASSIGNED_FACILITATOR_ID],
		P.[PROJECT_MANAGER_ID],
		P.REC_ID_TXT,
		P.TEAM_GRADE_TXT
	FROM [AION].[USER] U
	INNER JOIN [AION].[USER_SCHEDULE] US ON U.[USER_Id] = US.[USER_ID]
	INNER JOIN [AION].[PROJECT_SCHEDULE] PS ON US.[PROJECT_SCHEDULE_ID] = PS.[PROJECT_SCHEDULE_ID]
		AND PS.[PROJECT_SCHEDULE_TYP_DESC] IN ('PMA')
	INNER JOIN [AION].[PRELIMINARY_MEETING_APPOINTMENT] PMA ON PS.[APPT_ID] = PMA.[PRELIMINARY_MEETING_APPT_ID]
	INNER JOIN [AION].[PROJECT] P ON P.[PROJECT_ID] = PMA.PROJECT_ID
	INNER JOIN [AION].[PROJECT_STATUS_REF] PSR ON PSR.PROJECT_STATUS_REF_ID = P.PROJECT_STATUS_REF_ID
	INNER JOIN [AION].APPOINTMENT_RESPONSE_STATUS_REF ARSR ON ARSR.APPT_RESPONSE_STATUS_REF_ID = PMA.APPT_RESPONSE_STATUS_REF_ID
	WHERE PS.[RECURRING_APPT_DT] IS NOT NULL
		AND PMA.APPT_RESPONSE_STATUS_REF_ID NOT IN (
			@closedapptstatus,
			@cancelledapptstatus
			)
		AND P.PROJECT_STATUS_REF_ID <> @CancelledProjectStatus
		AND cast(PS.[RECURRING_APPT_DT] AS DATE) >= @todaysDate
	
	UNION
	
	SELECT DISTINCT PS.[RECURRING_APPT_DT] AS [MEETING_DATE_TIME],
		MTR.ENUM_MAPPING_VAL_NBR AS [MEETING_TYPE],
		P.[PROJECT_TYP_REF_ID] AS [PROJECT_TYPE_ID], --DO NOT HAVE ENUM MAP AND ENUMS ARE MAPPED DIRECTLY TO PK.             
		P.[SRC_SYSTEM_VAL_TXT] AS [PROJECT_EXTREF_ID],
		P.[PROJECT_NM] AS [PROJECT_NM],
		ARSR.ENUM_MAPPING_VAL_NBR AS [APPOINTMENT_RESPONSE_STATUS],
		CASE 
			WHEN PSR.ENUM_MAPPING_VAL_NBR IN (
					12,
					13,
					14,
					15,
					16,
					17
					)
				THEN PSR.ENUM_MAPPING_VAL_NBR
			ELSE 14 -- IF ANY OTHER STATUS THEN CONSIDER IT AS NOT SCHEDULED. ANYTHING OTHER NEED TO BE ADDED TO ANOTHER CASE HERE AS 3RD STEP.            
			END AS [PROJECT_STATUS],
		'' AS [AGENDA_DUE],
		PS.[RECURRING_APPT_DT] AS [MINUTES_DUE],
		P.[PROJECT_ID] AS [PROJECT_ID],
		0 AS [USER_ID],
		FMA.[WKR_ID_CREATED_TXT] AS [WKR_ID_CREATED_TXT],
		FMA.[CREATED_DTTM] AS [CREATED_DTTM],
		FMA.[WKR_ID_UPDATED_TXT] AS [WKR_ID_UPDATED_TXT],
		FMA.[UPDATED_DTTM] AS [UPDATED_DTTM],
		FMA.APPT_CANCELLATION_REF_ID,
		P.[RTAP_IND],
		P.[ASSIGNED_FACILITATOR_ID],
		P.[PROJECT_MANAGER_ID],
		P.REC_ID_TXT,
		P.TEAM_GRADE_TXT
	FROM [AION].[USER] U
	INNER JOIN [AION].[USER_SCHEDULE] US ON U.[USER_Id] = US.[USER_ID]
	INNER JOIN [AION].[PROJECT_SCHEDULE] PS ON US.[PROJECT_SCHEDULE_ID] = PS.[PROJECT_SCHEDULE_ID]
		AND PS.[PROJECT_SCHEDULE_TYP_DESC] IN ('FMA')
	INNER JOIN [AION].[FACILITATOR_MEETING_APPOINTMENT] FMA ON PS.[APPT_ID] = FMA.[FACILITATOR_MEETING_APPT_IDENTIFIER]
	INNER JOIN [AION].[PROJECT] P ON P.[PROJECT_ID] = FMA.PROJECT_ID
	INNER JOIN [AION].[PROJECT_STATUS_REF] PSR ON PSR.PROJECT_STATUS_REF_ID = P.PROJECT_STATUS_REF_ID
	INNER JOIN [AION].[MEETING_TYPE_REF] MTR ON FMA.MEETING_TYP_REF_ID = MTR.MEETING_TYP_REF_ID
	INNER JOIN [AION].APPOINTMENT_RESPONSE_STATUS_REF ARSR ON ARSR.APPT_RESPONSE_STATUS_REF_ID = FMA.APPT_RESPONSE_STATUS_REF_ID
	WHERE PS.[RECURRING_APPT_DT] IS NOT NULL
		AND FMA.APPT_RESPONSE_STATUS_REF_ID NOT IN (
			@closedapptstatus,
			@cancelledapptstatus
			)
		AND P.PROJECT_STATUS_REF_ID <> @CancelledProjectStatus
		AND cast(PS.[RECURRING_APPT_DT] AS DATE) >= @todaysDate
	
	UNION
	
	SELECT DISTINCT PS.[RECURRING_APPT_DT] AS [MEETING_DATE_TIME],
		8 AS [MEETING_TYPE], -- MEETINGTYPEENUM.EXPRESS            
		P.[PROJECT_TYP_REF_ID] AS [PROJECT_TYPE_ID], --DO NOT HAVE ENUM MAP AND ENUMS ARE MAPPED DIRECTLY TO PK.             
		P.[SRC_SYSTEM_VAL_TXT] AS [PROJECT_EXTREF_ID],
		P.[PROJECT_NM] AS [PROJECT_NM],
		ARSR.ENUM_MAPPING_VAL_NBR AS [APPOINTMENT_RESPONSE_STATUS],
		CASE 
			WHEN PSR.ENUM_MAPPING_VAL_NBR IN (
					12,
					13,
					14,
					15,
					16,
					17
					)
				THEN PSR.ENUM_MAPPING_VAL_NBR
			ELSE 14 -- IF ANY OTHER STATUS THEN CONSIDER IT AS NOT SCHEDULED. ANYTHING OTHER NEED TO BE ADDED TO ANOTHER CASE HERE AS 3RD STEP.            
			END AS [PROJECT_STATUS],
		NULL AS [AGENDA_DUE],
		PS.[RECURRING_APPT_DT] AS [MINUTES_DUE],
		P.[PROJECT_ID] AS [PROJECT_ID],
		0 AS [USER_ID],
		EMA.[WKR_ID_CREATED_TXT] AS [WKR_ID_CREATED_TXT],
		EMA.[CREATED_DTTM] AS [CREATED_DTTM],
		EMA.[WKR_ID_UPDATED_TXT] AS [WKR_ID_UPDATED_TXT],
		EMA.[UPDATED_DTTM] AS [UPDATED_DTTM],
		EMA.APPT_CANCELLATION_REF_ID,
		P.[RTAP_IND],
		P.[ASSIGNED_FACILITATOR_ID],
		P.[PROJECT_MANAGER_ID],
		P.REC_ID_TXT,
		P.TEAM_GRADE_TXT
	FROM [AION].[USER] U
	INNER JOIN [AION].[USER_SCHEDULE] US ON U.[USER_Id] = US.[USER_ID]
	INNER JOIN [AION].[PROJECT_SCHEDULE] PS ON US.[PROJECT_SCHEDULE_ID] = PS.[PROJECT_SCHEDULE_ID]
		AND PS.[PROJECT_SCHEDULE_TYP_DESC] IN ('EMA')
	INNER JOIN [AION].[EXPRESS_MEETING_APPOINTMENT] EMA ON PS.[APPT_ID] = EMA.[EXPRESS_MEETING_APPT_ID]
	INNER JOIN [AION].[PROJECT] P ON P.[PROJECT_ID] = EMA.PROJECT_ID
	INNER JOIN [AION].[PROJECT_STATUS_REF] PSR ON PSR.PROJECT_STATUS_REF_ID = P.PROJECT_STATUS_REF_ID
	INNER JOIN [AION].APPOINTMENT_RESPONSE_STATUS_REF ARSR ON ARSR.APPT_RESPONSE_STATUS_REF_ID = EMA.APPT_RESPONSE_STATUS_REF_ID
	WHERE PS.[RECURRING_APPT_DT] IS NOT NULL
		AND EMA.APPT_RESPONSE_STATUS_REF_ID NOT IN (
			@closedapptstatus,
			@cancelledapptstatus
			)
		AND P.PROJECT_STATUS_REF_ID <> @CancelledProjectStatus
		AND cast(PS.[RECURRING_APPT_DT] AS DATE) >= @todaysDate;

	RETURN;
END;
